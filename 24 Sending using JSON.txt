Summary:
CONCLUSION: 
JSON.stringify()
	a)  input: takes in JS object
	b)  converts JS object --> stringify() JSON form

JSON.parse()
	a) input:   takes string (String is structured as jSON)
	b) output: JS object
	

const json = '{"title": "Avengers Endgame", "Rating":4.7, "inTheatres":false}';		//JSON string looks like JS object / structured as JS object
const obj = JSDN.parse(json)			//get object back using JSON.parse()

console.log(obj.title)				//Use dot operator to access fields of object

// Avengers Endgame
+++++++++++++++++++++++++++++++++++++++

a) how can we send data to server using JSON?


//built in methods //browser api
	a.1) JSON.parse()


	a.2) JSON.stringify()	//helps to send data
					//gives string form of JSON data
					//Send that JSON data in http request


b) 
	Given bug in updateLocationById()
	//location discovered does not get saved properly by server

	What is the bug? location's discovered propperty is not saved properly
	//what is location object? //body: locationObj


c)
	c.1) //update its location's discovered property 
	c.2) //await again
	c.3) not getting updated

	Why not getting updated? How and where update is done? updateLocationById()s
	c.4) Where is problem? updateLocationById(id, locationObj)
	
	What missing?inside response -> body: locationObj is passed
	//What type this takes? string   //NOT A JS Object
	//fetch api wont stringify object for us  //since it can be html/plain text etc
	c.5) Make change	: body: JSON.stringify(locationObj)	//body: locationObj
						
	c.6) Output:
	
Location 'Bandit Camp' fetched. Data: {"discovered":false,"id":"0194fdc2-fa2f—
4cc0—81d3—ff12045b73c8","name":"Bandit Camp","recommendedLevel":14}
Location 'Bandit Camp' was discovered! . .
Location 'Bandit Camp' fetched. Data: {"discovered":true, »I;$ '_
4cc0—81d3-ff12045b73c8","name":"Bandit Camp","recommendedI "IIII [‘ii;" (A\

	c.7) What objective achieved? successfully sent data using JSON


CONCLUSION: 
JSON.stringify()
	a)  input: takes in JS object
	b)  converts JS object --> stringify() JSON form

JSON.parse()
	a) input:   takes string (String is structured as jSON)
	b) output: JS object


const json = '{"title": "Avengers Endgame", "Rating":4.7, "inTheatres":false}';		//JSON string looks like JS object / structured as JS object
const obj = JSDN.parse(json)			//get object back using JSON.parse()

console.log(obj.title)				//Use dot operator to access fields of object

// Avengers Endgame
	
++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Code (Original)
async function updateLocationById(id, locationObj) {
const path = ‘https://api.boot.dev/vl/courses_rest_api/learn—ht
const response = await fetch(path, {
method: 'PUT',
mode: 'cors',
headers: getHeaders().
body: JSON.stringify(locationObj)	//body: locationObj
})
return response.json()
}




Code (Earlier)

async function updateLocationById(id, locationObj) {
const path = ‘https://api.boot.dev/vl/courses_rest_api/learn—ht
const response = await fetch(path, {
method: 'PUT',
mode: 'cors',
headers: getHeaders().
body: locationObj
})
return response.json()
}
// Don't touch below this line
const apiKey = generateKey()
const locationID = '0194fdc2—fa2f-4cc0—81d3—ff12045b73c8'
const location = await getLocationById(locationID)		/await location object
console.log(‘Location '${location.name}' fetched. Data: ${JSON.stringify()

location.discovered = true					//update its location's discovered property 

await updateLocationById(locationID, location)		//await again
console.log(‘Location '${location.name}' was discovered!‘)

const updatedLocation = await getLocationById(locationID)
console.log(‘Location '${updatedLocation.name}' fetched. Data: ${
const updatedLocation = await getLocationById(locationID)
console.log(‘Location '${updatedLocation.name}' fetched. Data: ${JSON.stringify(updatedL
1
function generateKey() {
const characters = 'ABCDEF0123456789'
let result = "
for (let i = 0; i < 16; i++) {
result += characters.charAt(Math.floor(Math.random() * characters.length))
}
return result
}

async function getLocationById(id) {
const path = ‘https://api.boot.dev/vl/courses_rest_api/learn—http/locations/${id}‘
const response = await fetch(path, {
method: 'GET',
mode: 'cors', z
headers: {
'X-API—Key': apiKey,
'Content—Type': 'application/json'
}
})
return response.json()
}	

function getHeaders() {
return {
'X—API—Key': apiKey,
'Content—Type': 'application/json'
}
}

d)
>Output

Location 'Bandit Camp' fetched. Data: {"discovered":false,"id":"0194fdc2-fa2f—
4cc0—81d3—ff12045b73c8","name":"Bandit Camp","recommendedLevel":14}
Location 'Bandit Camp' was discovered! . .
Location 'Bandit Camp' fetched. Data: {"discovered":false, »I;$ '_
4cc0—81d3-ff12045b73c8","name":"Bandit Camp","recommendedI "IIII [‘ii;" (A\

+++++++++++++++++++++++++++++++++++++++++++++++++++